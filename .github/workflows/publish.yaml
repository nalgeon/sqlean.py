name: Publish to PyPI

on:
    push:
        tags:
            - "*"
    workflow_dispatch:

jobs:
    download-sources:
        name: Download and store sources
        runs-on: ubuntu-latest
        steps:
            - name: Checkout sources
              uses: actions/checkout@v5

            - name: Download external sources
              run: |
                  make prepare-src
                  make download-sqlite
                  make download-sqlean

            - name: Store sources
              uses: actions/upload-artifact@v4
              with:
                  name: sources
                  path: |
                      MANIFEST.in
                      Makefile
                      README.md
                      setup.cfg
                      setup.py
                      sqlean
                      src
                      sqlite
                      tests

    sdist:
        name: Build sdist
        runs-on: ubuntu-latest
        needs: download-sources
        steps:
            - name: Download sources
              uses: actions/download-artifact@v4
              with:
                  name: sources

            - name: Build sdist
              run: pipx run build --sdist

            - name: Store sdist
              uses: actions/upload-artifact@v4
              with:
                  name: sdist
                  path: dist/*.tar.gz

    wheels:
        name: Build wheels on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        needs: download-sources
        strategy:
            matrix:
                os:
                    - ubuntu-latest
                    - macos-latest
        steps:
            - name: Download sources
              uses: actions/download-artifact@v4
              with:
                  name: sources

            # only initialize QEMU on Linux, other platforms don't need it
            - name: Set up QEMU to add multiplatform support
              if: runner.os == 'Linux'
              uses: docker/setup-qemu-action@v3
              with:
                  platforms: arm64

            - name: Build wheels
              uses: pypa/cibuildwheel@v3.2.1
              env:
                  # architectures:
                  # - 64-bit linux (x86_64/aarch64)
                  # - 64-bit macos (x86_64/arm64)
                  CIBW_ARCHS_LINUX: x86_64 aarch64
                  CIBW_ARCHS_MACOS: x86_64 arm64
                  # python versions 3.10 to 3.14
                  CIBW_BUILD: "cp310-macosx* cp311-macosx* cp312-macosx* cp313-macosx* cp314-macosx* cp310-manylinux* cp311-manylinux* cp312-manylinux* cp313-manylinux* cp314-manylinux*"
                  # set the minimum macOS version to 10.15
                  MACOSX_DEPLOYMENT_TARGET: 10.15

            - name: Store wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-${{ matrix.os }}
                  path: ./wheelhouse/*.whl

    publish:
        name: Publish to PyPI
        needs: [sdist, wheels]
        runs-on: ubuntu-latest
        permissions:
            id-token: write
        steps:
            - name: Download sdist
              uses: actions/download-artifact@v4
              with:
                  name: sdist
                  path: dist

            - name: Download wheels
              uses: actions/download-artifact@v4
              with:
                  pattern: wheels-*
                  path: dist
                  merge-multiple: true

            - name: Publish to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
